CREATE DATABASE PP_PROJECT;
USE DATABASE PP_PROJECT;
----------------------------------------------------------------------------------------
CREATE OR REPLACE TABLE PP_demographic_RAW
(AGE_DESC	CHAR(20),
MARITAL_STATUS_CODE	CHAR(5),
INCOME_DESC	VARCHAR(40),
HOMEOWNER_DESC	VARCHAR(40),
HH_COMP_DESC	VARCHAR(50),
HOUSEHOLD_SIZE_DESC	VARCHAR(50),
KID_CATEGORY_DESC	VARCHAR(40),
household_key INT PRIMARY KEY
);

CREATE OR REPLACE TABLE PP_CAMPAIGN_DESC_RAW
(DESCRIPTION CHAR(10),	
CAMPAIGN	INT ,
START_DAY	INT,
END_DAY INT,
PRIMARY KEY (DESCRIPTION),
UNIQUE (CAMPAIGN));




CREATE OR REPLACE TABLE PP_CAMPAIGN_RAW
(DESCRIPTION	CHAR(10) ,
household_key	INT,
CAMPAIGN INT,
FOREIGN KEY (DESCRIPTION) references PP_CAMPAIGN_DESC_RAW(DESCRIPTION) ,
FOREIGN KEY (CAMPAIGN) references PP_CAMPAIGN_DESC_RAW(CAMPAIGN),
FOREIGN KEY (household_key) references PP_demographic_RAW(household_key)
);

CREATE OR REPLACE TABLE PP_PRODUCT_RAW
(PRODUCT_ID	INT PRIMARY KEY,
MANUFACTURER 	INT,
DEPARTMENT	VARCHAR(50),
BRAND	VARCHAR(30),
COMMODITY_DESC	VARCHAR(65),
SUB_COMMODITY_DESC VARCHAR(65)	,
CURR_SIZE_OF_PRODUCT VARCHAR(15)
);


CREATE OR REPLACE TABLE PP_COUPON_RAW
(COUPON_UPC	INT,
PRODUCT_ID	INT,
CAMPAIGN INT,
FOREIGN KEY (PRODUCT_ID) references PP_PRODUCT_RAW(PRODUCT_ID),
FOREIGN KEY (CAMPAIGN) references PP_CAMPAIGN_DESC_RAW(CAMPAIGN)
);


CREATE OR REPLACE TABLE PP_COUPON_REDEMPT_RAW
(household_key	INT,
DAY	INT,
COUPON_UPC	INT,
CAMPAIGN INT,
FOREIGN KEY (household_key) references PP_demographic_RAW(household_key),
FOREIGN KEY (CAMPAIGN) references PP_CAMPAIGN_DESC_RAW(CAMPAIGN)
);

CREATE OR REPLACE TABLE PP_TRANSACTION_RAW 
(household_key	INT,
BASKET_ID	INT,
DAY	INT,
PRODUCT_ID	INT,
QUANTITY	INT,
SALES_VALUE	FLOAT,
STORE_ID	INT,
RETAIL_DISC	FLOAT,
TRANS_TIME	INT,
WEEK_NO	INT,
COUPON_DISC	INT,
COUPON_MATCH_DISC INT,
FOREIGN KEY (PRODUCT_ID) references PP_PRODUCT_RAW(PRODUCT_ID),
FOREIGN KEY (household_key) references PP_Demographic_RAW(household_key)
);
CREATE OR REPLACE TABLE PP_TRANSACTION_RAW2 LIKE PP_TRANSACTION_RAW;
DESC TABLE PP_TRANSACTION_RAW2;


-------------------------------------------------------------------------------------------------------
CREATE OR REPLACE STORAGE integration pp_s3_int
TYPE = EXTERNAL_STAGE
STORAGE_PROVIDER = S3
ENABLED = TRUE
STORAGE_AWS_ROLE_ARN ='arn:aws:iam::800145959640:role/retailrole' 
STORAGE_ALLOWED_LOCATIONS =('s3://retailprojectpp/');

DESC integration pp_s3_int;


CREATE OR REPLACE STAGE PP_RETAIL
URL ='s3://retailprojectpp'
file_format =CSV_PROJECT
storage_integration = PP_s3_int;

LIST @PP_RETAIL;

SHOW STAGES;
----------------------------------------------------------------------------------------------------------------------

CREATE OR REPLACE PIPE RETAIL_SNOWPIPE_DEMOGRAPHIC AUTO_INGEST = TRUE AS
COPY INTO PP_PROJECT.PUBLIC.PP_DEMOGRAPHIC_RAW --yourdatabase -- your schema ---your table
FROM '@PP_RETAIL/PP_DEMOGRAPHIC_RAW/' --s3 bucket subfolde4r name
FILE_FORMAT = CSV_PROJECT; --YOUR CSV FILE FORMAT NAME

CREATE OR REPLACE PIPE RETAIL_SNOWPIPE_CAMPAIGN_DESC AUTO_INGEST = TRUE AS
COPY INTO PP_PROJECT.PUBLIC.PP_CAMPAIGN_DESC_RAW
FROM '@PP_RETAIL/PP_CAMPAIGN_DESC_RAW/' 
FILE_FORMAT = CSV_PROJECT;

CREATE OR REPLACE PIPE RETAIL_SNOWPIPE_CAMPAIGN AUTO_INGEST = TRUE AS
COPY INTO PP_PROJECT.PUBLIC.PP_CAMPAIGN_RAW
FROM '@PP_RETAIL/PP_CAMPAIGN_RAW/' 
FILE_FORMAT = CSV_PROJECT;

CREATE OR REPLACE PIPE RETAIL_SNOWPIPE_PRODUCT AUTO_INGEST = TRUE AS
COPY INTO PP_PROJECT.PUBLIC.PP_PRODUCT_RAW
FROM '@PP_RETAIL/PP_PRODUCT_RAW/' 
FILE_FORMAT = CSV_PROJECT;


CREATE OR REPLACE PIPE RETAIL_SNOWPIPE_COUPON AUTO_INGEST = TRUE AS
COPY INTO PP_PROJECT.PUBLIC.PP_COUPON_RAW
FROM '@PP_RETAIL/PP_COUPON_RAW/' 
FILE_FORMAT = CSV_PROJECT;

CREATE OR REPLACE PIPE RETAIL_SNOWPIPE_COUPON_REDEMPT  AUTO_INGEST = TRUE AS
COPY INTO PP_PROJECT.PUBLIC.PP_COUPON_REDEMPT_RAW
FROM '@PP_RETAIL/PP_COUPON_REDEMPT_RAW/' 
FILE_FORMAT = CSV_PROJECT;

CREATE OR REPLACE PIPE RETAIL_SNOWPIPE_TRANSACTION  AUTO_INGEST = TRUE AS
COPY INTO PP_PROJECT.PUBLIC.PP_TRANSACTION_RAW
FROM '@PP_RETAIL/PP_TRANSACTION_RAW/' 
FILE_FORMAT = CSV_PROJECT;
CREATE OR REPLACE PIPE RETAIL_SNOWPIPE_TRANSACTION2  AUTO_INGEST = TRUE AS
COPY INTO PP_PROJECT.PUBLIC.PP_TRANSACTION_RAW2
FROM '@PP_RETAIL/PP_TRANSACTION_RAW2/' 
FILE_FORMAT = CSV_PROJECT;

SHOW PIPES;

SELECT COUNT(*) FROM PP_demographic_RAW;
SELECT COUNT(*) FROM PP_CAMPAIGN_DESC_RAW;
SELECT COUNT(*) FROM PP_CAMPAIGN_RAW;
SELECT COUNT(*) FROM PP_PRODUCT_RAW;
SELECT COUNT(*) FROM PP_COUPON_RAW;
SELECT COUNT(*) FROM PP_COUPON_REDEMPT_RAW;
SELECT COUNT(*) FROM PP_TRANSACTION_RAW;
SELECT COUNT(*) FROM PP_TRANSACTION_RAW2;
----------------------------------------------------------PIPEREFRESH-----------------------------------------------------------------

ALTER PIPE RETAIL_SNOWPIPE_DEMOGRAPHIC refresh;
ALTER PIPE  RETAIL_SNOWPIPE_CAMPAIGN_DESC refresh;
ALTER PIPE  RETAIL_SNOWPIPE_CAMPAIGN refresh;
ALTER PIPE  RETAIL_SNOWPIPE_PRODUCT refresh;
ALTER PIPE  RETAIL_SNOWPIPE_COUPON refresh;
ALTER PIPE  RETAIL_SNOWPIPE_COUPON_REDEMPT refresh;
ALTER PIPE  RETAIL_SNOWPIPE_TRANSACTION refresh;
ALTER PIPE  RETAIL_SNOWPIPE_TRANSACTION2 refresh;


SELECT * FROM PP_demographic_RAW;--2.5k
SELECT * FROM PP_CAMPAIGN_DESC_RAW;--30
SELECT * FROM PP_CAMPAIGN_RAW;--7.2k
SELECT * FROM PP_PRODUCT_RAW;--92.4k
SELECT * FROM PP_COUPON_RAW;--124.5k
SELECT * FROM PP_COUPON_REDEMPT_RAW;--2.3k
SELECT * FROM PP_TRANSACTION_RAW;--2595732
SELECT * FROM PP_TRANSACTION_RAW2;

select * from PP_PROJECT.PUBLIC.PP_TRANSACTION_NEW;

SELECT COUNT( DISTINCT CAMPAIGN) FROM PP_COUPON_RAW ;--1135 124548
SELECT COUNT( DISTINCT CAMPAIGN) FROM PP_COUPON_REDEMPT_RAW;--556 2318

SELECT COUNT(DISTINCT COUPON_UPC) FROM PP_COUPON_RAW WHERE CAMPAIGN IN 
(SELECT DISTINCT CAMPAIGN FROM PP_CAMPAIGN_DESC_RAW WHERE DESCRIPTION='TypeB'
intersect
SELECT DISTINCT CAMPAIGN FROM PP_PROJECT.PUBLIC.PP_CAMPAIGN_DESC_NEW WHERE START_YEAR=2021);--188


SELECT COUNT(DISTINCT COUPON_UPC) FROM PP_COUPON_REDEMPT_RAW WHERE CAMPAIGN IN 
(SELECT DISTINCT CAMPAIGN FROM PP_CAMPAIGN_DESC_RAW WHERE DESCRIPTION='TypeB'
intersect
SELECT DISTINCT CAMPAIGN FROM PP_PROJECT.PUBLIC.PP_CAMPAIGN_DESC_NEW WHERE START_YEAR=2021);

SELECT DISTINCT CAMPAIGN FROM PP_CAMPAIGN_DESC_RAW WHERE DESCRIPTION = 'TypeA';
SELECT DISTINCT HOUSEHOLD_KEY FROM PP_DEMOGRAPHIC_RAW;
SELECT DEPARTMENT,SUM(SALES_VALUE) FROM PP_TRANSACTION_RAW T LEFT OUTER JOIN PP_PRODUCT_RAW P ON T.PRODUCT_ID=P.PRODUCT_ID
GROUP BY 1 ORDER BY 2;

---------------------------------------------------------------------------------------------------------------------
/*1. Customer Demographics KPIs: 
o Count of unique households: Measure the total number of unique households in 
the Demographic table. 
o Household composition distribution: Analyze the distribution of household 
compositions (HH_COMP_DESC) to understand the composition of households. 
o Age distribution: Calculate the percentage or count of customers in different age 
groups (AGE_DESC). 
o Marital status distribution: Analyze the proportion of customers in different 
marital status categories (MARITAL_STATUS_CODE). 
o Income distribution: Determine the distribution of customers across income levels 
(INCOME_DESC). 
o Homeownership distribution: Calculate the percentage or count of customers who 
own or rent their homes (HOMEOWNER_DESC).*/
----------------------------------------------------------------------------------------------------------------------
SELECT * FROM PP_PROJECT.PUBLIC.PP_DEMOGRAPHIC_RAW;

--1)Count of unique households: Measure the total number of unique households in the Demographic table.
SELECT COUNT(DISTINCT HOUSEHOLD_KEY) AS UNIQUE_HOUESEHOLD_COUNT FROM PP_PROJECT.PUBLIC.PP_DEMOGRAPHIC_RAW;

--2) Household composition distribution: Analyze the distribution of household 
--compositions (HH_COMP_DESC) to understand the composition of households. 
SELECT HH_COMP_DESC,COUNT(HOUSEHOLD_KEY) AS COUNT_HOUSEHOLD FROM PP_PROJECT.PUBLIC.PP_DEMOGRAPHIC_RAW
GROUP BY 1 ORDER BY 2 DESC;

--Age distribution: Calculate the percentage or count of customers in different age 
--groups (AGE_DESC).
SELECT A.AGE_DESC,A.COUNT_HOUSEHOLD,ROUND(COUNT_HOUSEHOLD*100/2500,2) AS PERCENTAGE_COUNT FROM
(SELECT AGE_DESC,COUNT(DISTINCT HOUSEHOLD_KEY) AS COUNT_HOUSEHOLD
FROM PP_PROJECT.PUBLIC.PP_DEMOGRAPHIC_RAW
GROUP BY 1 ORDER BY 2 DESC)A;

--Marital status distribution: Analyze the proportion of customers in different 
--marital status categories (MARITAL_STATUS_CODE). 
SELECT * FROM PP_PROJECT.PUBLIC.PP_DEMOGRAPHIC_RAW;

SELECT MARITAL_STATUS_CODE,TOTAL_HOUSEHOLD,ROUND((TOTAL_HOUSEHOLD*100/2500),2) AS PERCENTAGE_HOUSEHOLD FROM 
(SELECT MARITAL_STATUS_CODE,COUNT(DISTINCT HOUSEHOLD_KEY) AS TOTAL_HOUSEHOLD
FROM PP_PROJECT.PUBLIC.PP_DEMOGRAPHIC_RAW GROUP BY 1 ORDER BY 2 DESC);

--Income distribution: Determine the distribution of customers across income levels 
--(INCOME_DESC). 
SELECT INCOME_DESC,COUNT(DISTINCT HOUSEHOLD_KEY) AS COUNT_HOUSEHOLDS,ROUND((COUNT(DISTINCT HOUSEHOLD_KEY)*100/2500),2) AS PERCENTAGE_HOUSEHOLD
FROM PP_PROJECT.PUBLIC.PP_DEMOGRAPHIC_RAW
GROUP BY 1
ORDER BY 2 DESC;

--Homeownership distribution: Calculate the percentage or count of customers who 
--own or rent their homes (HOMEOWNER_DESC).

SELECT HOMEOWNER_DESC,COUNT(DISTINCT HOUSEHOLD_KEY) AS COUNT_HOUSEHOLDS,ROUND((COUNT(DISTINCT HOUSEHOLD_KEY)*100/2500),2) AS PERCENTAGE_HOUSEHOLD
FROM PP_PROJECT.PUBLIC.PP_DEMOGRAPHIC_RAW
GROUP BY 1
ORDER BY 2 DESC;

SELECT T.HOUSEHOLD_KEY,D.AGE_DESC,D.MARITAL_STATUS_CODE,D.INCOME_DESC,AVG(T.SALES_VALUE)AS AVG_AMOUNT,
AVG(T.RETAIL_DISC)AS AVG_RETAIL_DIS,AVG(T.COUPON_DISC)AS AVG_COUPON_DISC,AVG(T.COUPON_MATCH_DISC)AS AVG_COUP_MATCH_DISC
FROM PP_TRANSACTION_NEW T
LEFT OUTER JOIN PP_demographic_RAW D ON T.HOUSEHOLD_KEY =D.HOUSEHOLD_KEY
GROUP BY 1,2,3,4
ORDER BY 1;














































